<div id="top5RatingCarousel" class="carousel carousel-dark slide mb-4 carousel-fade">
  <div class="carousel-indicators">
      <button 
        type="button"
        data-bs-target="#top5RatingCarousel"
        class="carousel-indicator">
      </button>
  </div>
  <div class="carousel-inner">
  </div>
  
  <button class="carousel-control-prev" type="button" data-bs-target="#top5RatingCarousel" data-bs-slide="prev" style="width: 32px">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" type="button" data-bs-target="#top5RatingCarousel" data-bs-slide="next" style="width: 32px">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>

<div class="d-flex justify-content-between align-items-center mb-2">
  <h4 class="m-0">Top Box Office</h4>
  <div class="d-flex gap-2 top-box-office-carousel-indicators">
    <button 
      type="button"
      data-bs-target="#topBoxOfficesCarousel"
      class="carousel-indicator">
    </button>
  </div>
</div>

<div id="topBoxOfficesCarousel" class="carousel slide mb-5" data-bs-ride="true">
  <div class="carousel-inner">
  </div>
  <button class="carousel-control-prev" type="button" data-bs-target="#topBoxOfficesCarousel" data-bs-slide="prev" style="width: 32px">
    <span class="carousel-control-prev-icon" id="prev-page-top-box-office" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" id="next-page-top-box-office" type="button" data-bs-target="#topBoxOfficesCarousel" data-bs-slide="next" style="width: 32px">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>

<div class="d-flex justify-content-between align-items-center mb-2">
  <h4 class="m-0">Top Favorites</h4>
  <div class="d-flex gap-2 top-favorites-carousel-indicators">
    <button 
      for="(indicator, index) in topFavorites"
      type="button"
      data-bs-target="#topFavoritesCarousel"
      class="carousel-indicator"
      >
    </button>
  </div>
</div>

<div id="topFavoritesCarousel" class="carousel slide" data-bs-ride="true">
  <div class="carousel-inner">
  </div>
  <button class="carousel-control-prev" id="prev-page-top-favorite" type="button" data-bs-target="#topFavoritesCarousel" data-bs-slide="prev" style="width: 32px">
    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Previous</span>
  </button>
  <button class="carousel-control-next" id="next-page-top-favorite" type="button" data-bs-target="#topFavoritesCarousel" data-bs-slide="next" style="width: 32px">
    <span class="carousel-control-next-icon" aria-hidden="true"></span>
    <span class="visually-hidden">Next</span>
  </button>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {

  function createPagination(data, currentPage, pageSize) {
    const startIndex = (currentPage - 1) * pageSize;
    const endIndex = startIndex + pageSize;
    const paginatedData = data.slice(startIndex, endIndex);

    return {
      data: paginatedData,
      currentPage: currentPage,
      hasPrevPage: currentPage > 1,
      hasNextPage: endIndex < data.length
    };
  }

// Top ratings 

  let currentPageTopRating = 1;
  const pageSizeTopRating = 5;
  const limitTopRating = 5;
  let carouselInstanceTopRating = null;
  let totalDataTopRating = [];

  function updateTopRatingCarousel(data) {
    const pagination = createPagination(data, currentPageTopRating, pageSizeTopRating);
    
    const carouselInner = document.querySelector('#top5RatingCarousel .carousel-inner');
    const carouselIndicators = document.querySelector('#top5RatingCarousel .carousel-indicators');
    
    carouselInner.innerHTML = '';
    carouselIndicators.innerHTML = '';

    pagination.data.forEach((movie, index) => {
      const carouselItem = document.createElement('div');
      carouselItem.classList.add('carousel-item');
      if (index === 0) carouselItem.classList.add('active');
      carouselItem.setAttribute('data-bs-interval', '10000');
      
      carouselItem.innerHTML = `
        <div 
          style="cursor: pointer;" 
          onclick="window.location.href='/movie?id=${movie.id}'"
        >
          <div class="d-flex justify-content-center" style="width: 100%">
            <img src="${movie.imageurl}" class="d-block carousel-img" alt="${movie.fulltitle}">
          </div>
          <div class="carousel-caption d-none d-md-block">
            <h3>${movie.fulltitle}</h3>
            <p>${movie.genres}</p>
          </div>
        </div>
      `;
      carouselInner.appendChild(carouselItem);

      const indicator = document.createElement('button');
      indicator.type = 'button';
      indicator.setAttribute('data-bs-target', '#top5RatingCarousel');
      indicator.setAttribute('data-bs-slide-to', index);
      indicator.classList.add('carousel-indicator');
      if (index === 0) {
        indicator.classList.add('active');
        indicator.setAttribute('aria-current', 'true');
      }
      indicator.setAttribute('aria-label', `Slide ${index + 1}`);
      carouselIndicators.appendChild(indicator);
    });

    const prevButton = document.getElementById('prev-page-top-5-rating');
    const nextButton = document.getElementById('next-page-top-5-rating');

    if (prevButton) {
      prevButton.style.display = pagination.hasPrevPage ? 'block' : 'none';
    }

    if (nextButton) {
      nextButton.style.display = pagination.hasNextPage ? 'block' : 'none';
    }

    if (window.bootstrap && window.bootstrap.Carousel) {
      if (carouselInstanceTopRating) {
        carouselInstanceTopRating.dispose();
      }
      
      carouselInstanceTopRating = new window.bootstrap.Carousel('#top5RatingCarousel', {
        interval: 10000,
        ride: true
      });
    }
  }

  function fetchTopRatings() {
    fetch(`/top-ratings?limit=${limitTopRating}`)
      .then(response => response.json())
      .then(data => {
        if (Array.isArray(data.result)) {
          console.log(data.result);
          totalDataTopRating = data.result;
          updateTopRatingCarousel(data.result);
        } else {
          console.error('Error: fetched data is not an array');
        }
      })
      .catch(error => console.error('Error fetching top ratings:', error));
  }

  document.getElementById('next-page-top-5-rating')?.addEventListener('click', () => {
    currentPageTopRating++;
    updateTopRatingCarousel(totalDataTopRating);
  });

  document.getElementById('prev-page-top-5-rating')?.addEventListener('click', () => {
    if (currentPageTopRating > 1) {
      currentPageTopRating--;
      updateTopRatingCarousel(totalDataTopRating);
    }
  });

// Top box offices

  let currentPageTopBoxOffice = 1;
  const pageSizeTopBoxOffice = 3;
  const limitTopBoxOffice = 5;
  let carouselInstanceTopBoxOffice = null;
  let totalDataTopBoxOffice = [];
  let totalElementTopBoxOffice = 15;

  function updateBoxOfficeCarousel(data) {
    const pagination = createPagination(data, currentPageTopBoxOffice, pageSizeTopBoxOffice);
    
    const carouselInner = document.querySelector('#topBoxOfficesCarousel .carousel-inner');
    const carouselIndicators = document.querySelector('.top-box-office-carousel-indicators');
    
    carouselInner.innerHTML = '';
    carouselIndicators.innerHTML = '';
    
    const totalPages = Math.ceil(totalElementTopBoxOffice / pageSizeTopBoxOffice);
    const carouselItem = document.createElement('div');
    carouselItem.classList.add('carousel-item', 'd-flex', 'justify-content-center');
    
    pagination.data.forEach((movie, index) => {
        
        if (index === 0) carouselItem.classList.add('active');
        
        carouselItem.innerHTML += `
            <div class="d-flex justify-content-center" style="width: 365px">
              <div class="p-1" style="cursor:pointer;">
                <div class="card custom-hover-img" style="width: 365px">
                  <img
                    src="${movie.imageurl}"
                    class="card-img-top"
                    alt="${movie.fulltitle}"
                    style="height: 200px;"
                    onmouseover="this.nextElementSibling.style.display='block'"
                    onmouseout="this.nextElementSibling.style.display='none'"
                    onclick="window.location.href='/movie?id=${movie.id}'"
                  />
                  <div class="card-body" style="display: none;">
                    <h5 class="card-title mb-0">${movie.fulltitle}</h5>
                  </div>
                </div>
              </div>
            </div>
        `;
    });

    carouselInner.appendChild(carouselItem);

    
    for (let i = 0; i < totalPages; i++) {
        const indicator = document.createElement('button');
        indicator.type = 'button';
        indicator.setAttribute('data-bs-target', '#topBoxOfficesCarousel');
        indicator.setAttribute('data-bs-slide-to', i);
        indicator.classList.add('carousel-indicator');
        
        if (i === (currentPageTopBoxOffice - 1)) {
            indicator.classList.add('active');
            indicator.setAttribute('aria-current', 'true');
        }
        
        indicator.setAttribute('aria-label', `Slide ${i + 1}`);
        carouselIndicators.appendChild(indicator);
    }
    
    if (window.bootstrap && window.bootstrap.Carousel) {
        if (carouselInstanceTopBoxOffice) {
            carouselInstanceTopBoxOffice.dispose();
        }
        
        carouselInstanceTopBoxOffice = new window.bootstrap.Carousel('#topBoxOfficesCarousel', {
            interval: 10000,
            ride: true
        });
    }
}

  document.getElementById('next-page-top-box-office')?.addEventListener('click', () => {
      const totalPages = Math.ceil(totalElementTopBoxOffice / pageSizeTopBoxOffice);
      if (currentPageTopBoxOffice < totalPages) {
          currentPageTopBoxOffice++;
          fetchTopBoxOffice();
      }
  });

  document.getElementById('prev-page-top-box-office')?.addEventListener('click', () => {
      if (currentPageTopBoxOffice > 1) {
          currentPageTopBoxOffice--;
          fetchTopBoxOffice();
      }
  });

  function fetchTopBoxOffice() {
      fetch(`/top-box-office?page=${currentPageTopBoxOffice}&size=${pageSizeTopBoxOffice}`)
          .then(response => response.json())
          .then(data => {
              if (Array.isArray(data.paginationResult.movies)) {
                  console.log(data.paginationResult);
                  totalDataTopBoxOffice = data.paginationResult.movies;
                  totalElementTopBoxOffice = data.paginationResult.total;
                  updateBoxOfficeCarousel(totalDataTopBoxOffice);
              } else {
                  console.error('Error: fetched data is not an array');
              }
          })
          .catch(error => console.error('Error fetching top box office:', error));
  }

  // Top Favorites

  let currentPageTopFavorite = 1;
  const pageSizeTopFavorite = 3;
  const limitTopFavorite = 5;
  let carouselInstanceTopFavorite = null;
  let totalDataTopFavorite = [];
  let totalElementTopFavorite = 15;

  function updateTopFavorite(data) {
    const pagination = createPagination(data, currentPageTopFavorite, pageSizeTopFavorite);
    
    const carouselInner = document.querySelector('#topFavoritesCarousel .carousel-inner');
    const carouselIndicators = document.querySelector('.top-favorites-carousel-indicators');
    
    carouselInner.innerHTML = '';
    carouselIndicators.innerHTML = '';
    
    const totalPages = Math.ceil(totalElementTopFavorite / pageSizeTopFavorite);
    const carouselItem = document.createElement('div');
    carouselItem.classList.add('carousel-item', 'd-flex', 'justify-content-center');
    
    pagination.data.forEach((movie, index) => {
        
        if (index === 0) carouselItem.classList.add('active');
        
        carouselItem.innerHTML += `
            <div class="d-flex justify-content-center" style="width: 365px">
              <div class="p-1" style="cursor:pointer;">
                <div class="card custom-hover-img" style="width: 365px">
                  <img
                    src="${movie.imageurl}"
                    class="card-img-top"
                    alt="${movie.fulltitle}"
                    style="height: 200px;"
                    onmouseover="this.nextElementSibling.style.display='block'"
                    onmouseout="this.nextElementSibling.style.display='none'"
                    onclick="window.location.href='/movie?id=${movie.id}'"
                  />
                  <div class="card-body" style="display: none;">
                    <h5 class="card-title mb-0">${movie.fulltitle}</h5>
                  </div>
                </div>
              </div>
            </div>
        `;
    });

    carouselInner.appendChild(carouselItem);

    
    for (let i = 0; i < totalPages; i++) {
        const indicator = document.createElement('button');
        indicator.type = 'button';
        indicator.setAttribute('data-bs-target', '#topFavoritesCarousel');
        indicator.setAttribute('data-bs-slide-to', i);
        indicator.classList.add('carousel-indicator');
        
        if (i === (currentPageTopFavorite - 1)) {
            indicator.classList.add('active');
            indicator.setAttribute('aria-current', 'true');
        }
        
        indicator.setAttribute('aria-label', `Slide ${i + 1}`);
        carouselIndicators.appendChild(indicator);
    }
    
    if (window.bootstrap && window.bootstrap.Carousel) {
        if (carouselInstanceTopFavorite) {
            carouselInstanceTopFavorite.dispose();
        }
        
        carouselInstanceTopFavorite = new window.bootstrap.Carousel('#topFavoritesCarousel', {
            interval: 10000,
            ride: true
        });
    }
}

  document.getElementById('next-page-top-favorite')?.addEventListener('click', () => {
      const totalPages = Math.ceil(totalElementTopFavorite / pageSizeTopFavorite);
      if (currentPageTopFavorite < totalPages) {
          currentPageTopFavorite++;
          fetchTopFavorite();
      }
  });

  document.getElementById('prev-page-top-favorite')?.addEventListener('click', () => {
      if (currentPageTopFavorite > 1) {
          currentPageTopFavorite--;
          fetchTopFavorite();
      }
  });

  function fetchTopFavorite() {
      fetch(`/top-favorites?page=${currentPageTopFavorite}&size=${pageSizeTopFavorite}`)
          .then(response => response.json())
          .then(data => {
              if (Array.isArray(data.paginationResult.movies)) {
                  console.log(data.paginationResult);
                  totalDataTopFavorite = data.paginationResult.movies;
                  totalElementTopFavorite = data.paginationResult.total;
                  updateTopFavorite(totalDataTopFavorite);
              } else {
                  console.error('Error: fetched data is not an array');
              }
          })
          .catch(error => console.error('Error fetching top box office:', error));
  }

  fetchTopRatings();
  fetchTopBoxOffice();
  fetchTopFavorite();

});
</script>