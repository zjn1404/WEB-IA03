<div class="card mt-4">
  <div class="row g-0">
    <div class="col-md-4">
      <img 
        src="22413{movie.imageurl}" 
        class="img-fluid rounded-start"
        alt="22413{movie.title}" 
        style="height: 100%; object-fit: cover;"
      />
    </div>
    <div class="col-md-8">
      <div class="card-body">
        <h5 class="card-title">22413{ movie.title } (22413{ movie.year })</h5>
        <p class="card-text"><strong>Rating:</strong> 22413{ movie.ratings}</p>
        <p class="card-text"><strong>Awards:</strong> 22413{ movie.awards }</p>
        <p class="card-text"><strong>Genre:</strong> 22413{ movie.genres }</p>
        <p class="card-text"><strong>Release:</strong> 22413{ movie.year }</p>
        <p class="card-text"><strong>Plot:</strong> 22413{ movie.plot }</p>
        <p class="card-text"><strong>Director:</strong> 22413{ movie.directors}</p>
        <p class="card-text"><strong>Company:</strong> 22413{ movie.companies }</p>
      </div>
    </div>
  </div>
</div>

<div class="mt-4">
  <h5>Casts</h5>
  <div id="actorCarousel" class="carousel slide" data-bs-ride="carousel">
    <div class="carousel-indicators" id="carouselIndicators">
    </div>

    <div class="carousel-inner" id="carouselInner">
    </div>

    <button 
      class="carousel-control-prev" 
      type="button" 
      data-bs-target="#actorCarousel" 
      data-bs-slide="prev"
      style="width: 32px">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Previous</span>
    </button>
    <button 
      class="carousel-control-next" 
      type="button" 
      data-bs-target="#actorCarousel" 
      data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="visually-hidden">Next</span>
    </button>
  </div>
</div>

<div class="mt-4">
  
  <div class="mt-4">
    <h5>Add a Review</h5>
    <form id="reviewForm" action="/review?movieId=22413{movie.id}" method="post">
      <div class="mb-3">
        <label for="reviewUsername" class="form-label">Username</label>
        <input type="text" class="form-control" id="reviewUsername" name="username" >
      </div>
      <div class="mb-3">
        <label for="reviewTitle" class="form-label">Review Title</label>
        <input type="text" class="form-control" id="reviewTitle" name="reviewtitle" >
      </div>
      <div class="mb-3">
        <label for="reviewContent" class="form-label">Review Content</label>
        <textarea class="form-control" id="reviewContent" name="reviewcontent" rows="3" ></textarea>
      </div>
      <button type="submit" class="btn btn-primary">Submit Review</button>
    </form>
  </div>
  
  <h5>Reviews</h5>
  <ul class="list-group" id="reviewsList">
  </ul>

  <nav class="mt-3">
    <ul class="pagination justify-content-center" id="pagination">
    </ul>
  </nav>
</div>

<script>

// Actors
  const actors = [];
  22413{for actor in actors}
    actors.push({
      id: '22413{ actor.id }',
      name: `22413{ actor.name }`,
      image: `22413{ actor.imageurl }`,
      asCharacter: `22413{ actor.charactername }`,
    });
  {/for}
  if ( actors.length > 0 ) {
    const carouselIndicators = document.getElementById('carouselIndicators');
    const carouselInner = document.getElementById('carouselInner');

    function renderCarousel() {
      carouselIndicators.innerHTML = '';
      carouselInner.innerHTML = '';

      actors.forEach((actor, index) => {
        const indicatorButton = document.createElement('button');
        indicatorButton.setAttribute('type', 'button');
        indicatorButton.setAttribute('data-bs-target', '#actorCarousel');
        indicatorButton.setAttribute('data-bs-slide-to', index);
        indicatorButton.classList.add('carousel-indicator');
        if (index === 0) indicatorButton.classList.add('active');
        indicatorButton.setAttribute('aria-current', index === 0 ? 'true' : 'false');
        indicatorButton.setAttribute('aria-label', `Slide ${index + 1}`);
        carouselIndicators.appendChild(indicatorButton);

        const carouselItem = document.createElement('div');
        carouselItem.classList.add('carousel-item');
        if (index === 0) carouselItem.classList.add('active');

        const row = document.createElement('div');
        row.classList.add('row', 'justify-content-center');

        const col = document.createElement('div');
        col.classList.add('col-6', 'col-sm-4', 'col-md-3', 'col-lg-2', 'mb-3');

        const card = document.createElement('div');
        card.classList.add('card');
        card.style.cursor = 'pointer';
        card.style.height = '330px';
        card.onclick = () => handleActorClick(actor.id);

        const img = document.createElement('img');
        img.setAttribute('src', actor.image);
        img.setAttribute('alt', actor.name);
        img.classList.add('card-img-top');
        img.setAttribute('alt', actor.name);
        img.style.height = '200px';

        const cardBody = document.createElement('div');
        cardBody.classList.add('card-body', 'text-center', 'd-flex', 'align-items-center', 'flex-column');

        const cardTitle = document.createElement('h6');
        cardTitle.classList.add('card-title', 'text-primary');
        cardTitle.textContent = actor.name;

        const cardText = document.createElement('p');
        cardText.classList.add('card-text');
        if (actor.asCharacter) {
          cardText.textContent = `as ${actor.asCharacter}`;
        }

        cardBody.appendChild(cardTitle);
        cardBody.appendChild(cardText);
        card.appendChild(img);
        card.appendChild(cardBody);
        col.appendChild(card);
        row.appendChild(col);
        carouselItem.appendChild(row);
        carouselInner.appendChild(carouselItem);
      });
    }

    function handleActorClick(actorId) {
      console.log(`Actor clicked: ${actorId}`);
    }


    renderCarousel();
  } else {
    document.getElementById('actorCarousel').style.display = 'none';
  }

// Reviews

  const reviews = [];
  22413{for review in reviews}
    reviews.push({
      id: 22413{ review.id },
      username: '22413{ review.username }',
      reviewtitle: '22413{ review.reviewtitle }',
      reviewdate: '22413{ review.reviewdate }',
      reviewcontent: `22413{ review.reviewcontent }`,
    });
  {/for} 

  const reviewsPerPage = 2;
  let currentPage = 1;
  let totalPages = Math.ceil(reviews.length / reviewsPerPage);

  function renderReviews() {
    const reviewsList = document.getElementById('reviewsList');
    reviewsList.innerHTML = '';  

    const start = (currentPage - 1) * reviewsPerPage;
    const end = start + reviewsPerPage;
    const currentReviews = reviews.slice(start, end);

    currentReviews.forEach(review => {
      const li = document.createElement('li');
      li.classList.add('list-group-item');
      li.innerHTML = `
        <p class="mb-0"><strong>${review.username}: ${review.reviewtitle}</strong></p>
        <small class="text-muted">${review.reviewdate}</small>
        <p>${review.reviewcontent}</p>
      `;
      reviewsList.appendChild(li);
    });
  }

  function renderPagination() {
    const pagination = document.getElementById('pagination');
    pagination.innerHTML = ''; 

    const prevButton = document.createElement('li');
    prevButton.classList.add('page-item');
    prevButton.classList.toggle('disabled', currentPage === 1);
    prevButton.innerHTML = `<a class="page-link" href="javascript:void(0)">Previous</a>`;
    prevButton.onclick = () => changePage(currentPage - 1);
    pagination.appendChild(prevButton);

    for (let page = 1; page <= totalPages; page++) {
      const pageButton = document.createElement('li');
      pageButton.classList.add('page-item');
      pageButton.classList.toggle('active', page === currentPage);
      pageButton.innerHTML = `<a class="page-link" href="javascript:void(0)">${page}</a>`;
      pageButton.onclick = () => changePage(page);
      pagination.appendChild(pageButton);
    }

    const nextButton = document.createElement('li');
    nextButton.classList.add('page-item');
    nextButton.classList.toggle('disabled', currentPage === totalPages);
    nextButton.innerHTML = `<a class="page-link" href="javascript:void(0)">Next</a>`;
    nextButton.onclick = () => changePage(currentPage + 1);
    pagination.appendChild(nextButton);
  }

  function changePage(page) {
    if (page < 1 || page > totalPages) return;  

    currentPage = page;
    renderReviews(); 
    renderPagination();
  }

  renderReviews();
  renderPagination();


</script>